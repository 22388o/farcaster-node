title Farcaster node

participant t_syncer
participant t_wallet
participant t_swap
participant t_farcasterd
participant t_cli
participant peerd
participant m_cli
participant m_farcasterd
participant m_swap
participant m_wallet
participant m_syncer
==Bob and Alice can be on both sides==
m_farcasterd -> m_farcasterd : launch farcasterd\nmanually
m_farcasterd -> m_farcasterd : launch walletd
m_farcasterd<-m_wallet:Ctl Hello
m_cli -> m_farcasterd : MakeOffer (deferred)
m_farcasterd->m_wallet:Ctl GetKeys
m_farcasterd<-m_wallet:Ctl Keys (not to be held on state)
m_farcasterd->m_farcasterd:MakeOffer (continues)
m_farcasterd->m_farcasterd:launch\npeerd listen
t_farcasterd -> t_farcasterd : launch farcasterd\nmanually
t_farcasterd -> t_farcasterd : launch walletd
t_wallet->t_farcasterd:Ctl Hello
t_cli -> t_farcasterd : Ctl TakeOffer (deferred)
t_wallet<-t_farcasterd:Ctl GetKeys
t_wallet->t_farcasterd:Ctl Keys (not to be held on state)
t_farcasterd<-t_farcasterd:Ctl TakeOffer (continues)
t_farcasterd -> t_farcasterd : launch\npeerd connect
t_wallet<-t_farcasterd:Ctl TakeOffer
t_wallet->t_wallet:create taker wallet
t_wallet->t_farcasterd:Ctl LaunchSwap
t_swap -> t_farcasterd : Ctl Hello
t_swap <- t_farcasterd : Ctl TakeSwap
t_swap -> peerd : Msg TakerCommit
peerd -> m_farcasterd : Msg TakerCommit
m_farcasterd -> m_wallet : Msg TakerCommit
m_wallet->m_wallet:create maker wallet
m_wallet -> m_farcasterd : Ctl LaunchSwap
m_swap -> m_farcasterd : Ctl Hello
m_farcasterd -> m_swap : Ctl MakeSwap

m_swap -> peerd : Msg MakerCommit
t_swap <- peerd : Msg MakerCommit
t_swap -> peerd : Msg Reveal
peerd -> m_swap : Msg Reveal (taker is the sender)

peerd <- m_swap : Msg Reveal (maker is sender)
m_swap -> m_wallet : Msg Params
peerd -> t_swap : Msg Reveal (maker is sender)
t_swap -> t_wallet : Msg Params
==End of Commit-Reveal act==
==Bob is Maker (right side)==
m_wallet -> m_swap : Ctl CoreArbitratingSetup
peerd <- m_swap : Msg CoreArbitratingSetup
t_swap <- peerd : Msg CoreArbitratingSetup
t_wallet <- t_swap : Msg CoreArbitratingSetup
t_wallet -> t_swap : Ctl RefundProcedureSignatures
t_swap -> peerd : Msg RefundProcedureSignatures
peerd -> m_swap : Msg RefundProcedureSignatures
m_wallet <- m_swap : Msg RefundProcedureSignatures
m_wallet -> m_swap : Ctl BuyProcedureSignature
peerd <- m_swap : Msg BuyProcedureSignature
t_swap <- peerd : Msg BuyProcedureSignature
t_swap -> t_wallet : Msg BuyProcedureSignature

==Alice is Maker (right side)==
t_wallet -> t_swap : Ctl CoreArbitratingSetup
peerd <- t_swap : Msg CoreArbitratingSetup
m_swap <- peerd : Msg CoreArbitratingSetup
m_swap -> m_syncer : Watch Accordant Lock
m_swap -> m_syncer : Watch Arbitrating Lock
m_swap -> m_syncer : Watch Buy
m_swap -> m_syncer : Watch Cancel

m_wallet <- m_swap : Msg CoreArbitratingSetup
m_wallet -> m_swap : Ctl RefundProcedureSignatures
m_swap -> peerd : Msg RefundProcedureSignatures
peerd -> t_swap : Msg RefundProcedureSignatures
t_swap -> t_syncer : Watch Accordant Lock
t_swap -> t_syncer : Watch Arbitrating Lock
t_swap -> t_syncer : Watch Buy
t_swap -> t_syncer : Watch Cancel
t_swap -> t_swap : Checkpoint
t_syncer <- t_swap : Broadcast Arbitrating Lock
t_wallet <- t_swap : Msg RefundProcedureSignatures
t_wallet -> t_swap : Ctl BuyProcedureSignature
parallel
t_syncer ->  t_swap : Arbitrating Lock final
m_swap <- m_syncer : Arbitrating Lock final
parallel off
m_swap -> m_swap : Checkpoint
m_swap -> m_syncer : Broadcast Accordant Lock
parallel
m_swap <- m_syncer : Accordant Lock final
t_swap <- t_syncer : Accordant Lock final
parallel off
peerd <- t_swap : Msg BuyProcedureSignature
m_swap <- peerd : Msg BuyProcedureSignature
m_swap -> m_wallet : Msg BuyProcedureSignature
==End of Swap-Setup act==

